(L:Generic_Master_Caution_Active)^3b#1000$0//
(L:Generic_Master_Warning_Active)^3b#1001$0//
1000 * (L:AUX_pound_USED)^3f#1003$0.1//Fuel used
(>L:AUTOPILOT_roll, enum)^1#9888$0//
(>H:AS1000_PFD_FPL_Push)^0# 753$0//
(>H:AS1000_PFD_PROC_Push)^0# 754$0//
(>H:AS1000_PFD_RANGE_INC)^0# 755$0//
(>H:AS1000_PFD_RANGE_DEC)^0# 756$0//
(>H:AS1000_PFD_DIRECTTO)^0# 757$0//
(>H:AS1000_PFD_MENU_Push)^0# 758$0//
(>H:AS1000_PFD_CLR)^0# 759$0//
(>H:AS1000_PFD_ENT_Push)^0# 760$0//
(>H:AS1000_PFD_ActivateMapCursor)^0# 761$0//
(>H:AS1000_PFD_FMS_Lower_INC)^0# 762$0//
(>H:AS1000_PFD_FMS_Lower_DEC)^0# 763$0//
(>H:AS1000_PFD_FMS_Upper_INC)^0# 764$0//
(>H:AS1000_PFD_FMS_Upper_DEC)^0# 765$0//
(>H:AS1000_PFD_SOFTKEYS_1)^0# 766$0//
(>H:AS1000_PFD_SOFTKEYS_2)^0# 767$0//
(>H:AS1000_PFD_SOFTKEYS_3)^0# 768$0//
(>H:AS1000_PFD_SOFTKEYS_4)^0# 769$0//
(>H:AS1000_PFD_SOFTKEYS_5)^0# 770$0//
(>H:AS1000_PFD_SOFTKEYS_6)^0# 771$0//
(>H:AS1000_PFD_SOFTKEYS_7)^0# 772$0//
(>H:AS1000_PFD_SOFTKEYS_8)^0# 773$0//
(>H:AS1000_PFD_SOFTKEYS_9)^0# 774$0//
(>H:AS1000_PFD_SOFTKEYS_10)^0# 775$0//
(>H:AS1000_PFD_SOFTKEYS_11)^0# 776$0//
(>H:AS1000_PFD_SOFTKEYS_12)^0# 777$0//
(>H:AS1000_MFD_FPL_Push)^0# 778$0//
(>H:AS1000_MFD_PROC_Push)^0# 779$0//
(>H:AS1000_MFD_RANGE_INC)^0# 780$0//
(>H:AS1000_MFD_RANGE_DEC)^0# 781$0//
(>H:AS1000_MFD_DIRECTTO)^0# 782$0//
(>H:AS1000_MFD_MENU_Push)^0# 783$0//
(>H:AS1000_MFD_CLR)^0# 784$0//
(>H:AS1000_MFD_ENT_Push)^0# 785$0//
(>H:AS1000_MFD_ActivateMapCursor)^0# 786$0//
(>H:AS1000_MFD_FMS_Lower_INC)^0# 787$0//
(>H:AS1000_MFD_FMS_Lower_DEC)^0# 788$0//
(>H:AS1000_MFD_FMS_Upper_INC)^0# 789$0//
(>H:AS1000_MFD_FMS_Upper_DEC)^0# 790$0//
(>H:AS1000_MFD_SOFTKEYS_1)^0# 791$0//
(>H:AS1000_MFD_SOFTKEYS_2)^0# 792$0//
(>H:AS1000_MFD_SOFTKEYS_3)^0# 793$0//
(>H:AS1000_MFD_SOFTKEYS_4)^0# 794$0//
(>H:AS1000_MFD_SOFTKEYS_5)^0# 795$0//
(>H:AS1000_MFD_SOFTKEYS_6)^0# 796$0//
(>H:AS1000_MFD_SOFTKEYS_7)^0# 797$0//
(>H:AS1000_MFD_SOFTKEYS_8)^0# 798$0//
(>H:AS1000_MFD_SOFTKEYS_9)^0# 799$0//
(>H:AS1000_MFD_SOFTKEYS_10)^0# 800$0//
(>H:AS1000_MFD_SOFTKEYS_11)^0# 801$0//
(>H:AS1000_MFD_SOFTKEYS_12)^0# 802$0//
(>H:AS3000_TSC_Horizontal_BottomKnob_Push)^0# 811$0//
(>H:AS3000_TSC_Horizontal_BottomKnob_Small_DEC)^0# 812$0//
(>H:AS3000_TSC_Horizontal_BottomKnob_Small_INC)^0# 813$0//
(>H:AS3000_TSC_Horizontal_SoftKey_1)^0# 814$0//
(>H:AS3000_TSC_Horizontal_SoftKey_2)^0# 815$0//
(>H:AS3000_TSC_Horizontal_SoftKey_3)^0# 816$0//
(>H:AS3000_TSC_Horizontal_TopKnob_Large_DEC)^0# 817$0//
(>H:AS3000_TSC_Horizontal_TopKnob_Large_INC)^0# 818$0//
(>H:AS3000_TSC_Horizontal_TopKnob_Push)^0# 819$0//
(>H:AS3000_TSC_Horizontal_TopKnob_Push_Long)^0# 820$0//
(>H:AS3000_TSC_Horizontal_TopKnob_Small_DEC)^0# 821$0//
(>H:AS3000_TSC_Horizontal_TopKnob_Small_INC)^0# 822$0//
(>H:AS3000_PFD_1_SOFTKEYS_1)^0# 823$0//
(>H:AS3000_PFD_1_SOFTKEYS_2)^0# 824$0//
(>H:AS3000_PFD_1_SOFTKEYS_3)^0# 825$0//
(>H:AS3000_PFD_1_SOFTKEYS_4)^0# 826$0//
(>H:AS3000_PFD_1_SOFTKEYS_5)^0# 827$0//
(>H:AS3000_PFD_1_SOFTKEYS_6)^0# 828$0//
(>H:AS3000_PFD_1_SOFTKEYS_7)^0# 829$0//
(>H:AS3000_PFD_1_SOFTKEYS_8)^0# 830$0//
(>H:AS3000_PFD_1_SOFTKEYS_9)^0# 831$0//
(>H:AS3000_PFD_1_SOFTKEYS_10)^0# 832$0//
(>H:AS3000_PFD_1_SOFTKEYS_11)^0# 833$0//
(>H:AS3000_PFD_1_SOFTKEYS_12)^0# 834$0//
(>H:AS3000_PFD_2_SOFTKEYS_1)^0# 835$0//
(>H:AS3000_PFD_2_SOFTKEYS_2)^0# 836$0//
(>H:AS3000_PFD_2_SOFTKEYS_3)^0# 837$0//
(>H:AS3000_PFD_2_SOFTKEYS_4)^0# 838$0//
(>H:AS3000_PFD_2_SOFTKEYS_5)^0# 839$0//
(>H:AS3000_PFD_2_SOFTKEYS_6)^0# 840$0//
(>H:AS3000_PFD_2_SOFTKEYS_7)^0# 841$0//
(>H:AS3000_PFD_2_SOFTKEYS_8)^0# 842$0//
(>H:AS3000_PFD_2_SOFTKEYS_9)^0# 843$0//
(>H:AS3000_PFD_2_SOFTKEYS_10)^0# 844$0//
(>H:AS3000_PFD_2_SOFTKEYS_11)^0# 845$0//
(>H:AS3000_PFD_2_SOFTKEYS_12)^0# 846$0//
(>H:AS3000_PFD_3_SOFTKEYS_1)^0# 847$0//
(>H:AS3000_PFD_3_SOFTKEYS_2)^0# 848$0//
(>H:AS3000_PFD_3_SOFTKEYS_3)^0# 849$0//
(>H:AS3000_PFD_3_SOFTKEYS_4)^0# 850$0//
(>H:AS3000_PFD_3_SOFTKEYS_5)^0# 851$0//
(>H:AS3000_PFD_3_SOFTKEYS_6)^0# 852$0//
(>H:AS3000_PFD_3_SOFTKEYS_7)^0# 853$0//
(>H:AS3000_PFD_3_SOFTKEYS_8)^0# 854$0//
(>H:AS3000_PFD_3_SOFTKEYS_9)^0# 855$0//
(>H:AS3000_PFD_3_SOFTKEYS_10)^0# 856$0//
(>H:AS3000_PFD_3_SOFTKEYS_11)^0# 857$0//
(>H:AS3000_PFD_3_SOFTKEYS_12)^0# 858$0//
(>H:AS3000_MFD_SOFTKEYS_1)^0# 859$0//
(>H:AS3000_MFD_SOFTKEYS_2)^0# 860$0//
(>H:AS3000_MFD_SOFTKEYS_3)^0# 861$0//
(>H:AS3000_MFD_SOFTKEYS_4)^0# 862$0//
(>H:AS3000_MFD_SOFTKEYS_5)^0# 863$0//
(>H:AS3000_MFD_SOFTKEYS_6)^0# 864$0//
(>H:AS3000_MFD_SOFTKEYS_7)^0# 865$0//
(>H:AS3000_MFD_SOFTKEYS_8)^0# 866$0//
(>H:AS3000_MFD_SOFTKEYS_9)^0# 867$0//
(>H:AS3000_MFD_SOFTKEYS_10)^0# 868$0//
(>H:AS3000_MFD_SOFTKEYS_11)^0# 869$0//
(>H:AS3000_MFD_SOFTKEYS_12)^0# 870$0//
(>H:AS3000_PFD_SOFTKEYS_1)^0# 871$0//
(>H:AS3000_PFD_SOFTKEYS_2)^0# 872$0//
(>H:AS3000_PFD_SOFTKEYS_3)^0# 873$0//
(>H:AS3000_PFD_SOFTKEYS_4)^0# 874$0//
(>H:AS3000_PFD_SOFTKEYS_5)^0# 875$0//
(>H:AS3000_PFD_SOFTKEYS_6)^0# 876$0//
(>H:AS3000_PFD_SOFTKEYS_7)^0# 877$0//
(>H:AS3000_PFD_SOFTKEYS_8)^0# 878$0//
(>H:AS3000_PFD_SOFTKEYS_9)^0# 879$0//
(>H:AS3000_PFD_SOFTKEYS_10)^0# 880$0//
(>H:AS3000_PFD_SOFTKEYS_11)^0# 881$0//
(>H:AS3000_PFD_SOFTKEYS_12)^0# 882$0//
(>H:AS3000_PFD_BottomKnob_Large_DEC)^0# 883$0//
(>H:AS3000_PFD_BottomKnob_Large_INC)^0# 884$0//
(>H:AS3000_PFD_BottomKnob_Push)^0# 885$0//
(>H:AS3000_PFD_BottomKnob_Push_Long)^0# 886$0//
(>H:AS3000_PFD_BottomKnob_Small_DEC)^0# 887$0//
(>H:AS3000_PFD_BottomKnob_Small_INC)^0# 888$0//
(>H:AS3000_PFD_TopKnob_Large_DEC)^0# 889$0//
(>H:AS3000_PFD_TopKnob_Large_INC)^0# 890$0//
(>H:AS3000_PFD_TopKnob_Small_DEC)^0# 891$0//
(>H:AS3000_PFD_TopKnob_Small_INC)^0# 892$0//
(>H:AS3000_TSC_Vertical_BottomKnob_Large_DEC)^0# 893$0//
(>H:AS3000_TSC_Vertical_BottomKnob_Large_INC)^0# 894$0//
(>H:AS3000_TSC_Vertical_BottomKnob_Push)^0# 895$0//
(>H:AS3000_TSC_Vertical_BottomKnob_Push_Long)^0# 896$0//
(>H:AS3000_TSC_Vertical_BottomKnob_Small_DEC)^0# 897$0//
(>H:AS3000_TSC_Vertical_BottomKnob_Small_INC)^0# 898$0//
(>H:AS3000_TSC_Vertical_TopKnob_Large_DEC)^0# 899$0//
(>H:AS3000_TSC_Vertical_TopKnob_Large_INC)^0# 903$0//
(>H:AS3000_TSC_Vertical_TopKnob_Small_DEC)^0# 904$0//
(>H:AS3000_TSC_Vertical_TopKnob_Small_INC)^0# 905$0//
(>H:Generic_Master_Warning_Push)^0# 906$0//
(>H:Generic_Master_Caution_Push)^0# 907$0//
(>H:adf_frqTransfert)^0# 910$0//
(A:AUTOPILOT ALTITUDE LOCK VAR, feet) 100 + (>K:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up)^0#2000$0// altitude ap + 100//
(A:AUTOPILOT ALTITUDE LOCK VAR, feet) 1000 + (>K:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up)^0#2001$0// altitude ap + 1000//
(A:AUTOPILOT ALTITUDE LOCK VAR, feet) - 100 + (>K:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Down)^0#2002$0// altitude ap - 100//
(A:AUTOPILOT ALTITUDE LOCK VAR, feet) - 1000 + (>K:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Down)^0#2003$0// altitude ap - 1000//
(>H:AS3000_PFD_BARO_INC)^0#2004$0//
(>H:AS3000_PFD_BARO_DEC)^0#2005$0//
(>H:A320_Neo_CDU_MODE_MANAGED_SPEED)^0#2006$0// Managed speed CDU
(>H:A320_Neo_FCU_MODE_MANAGED_SPEED)^0#2007$0// Managed speed FCU
(>H:A320_Neo_CDU_MODE_SELECTED_SPEED)^0#2008$0// Selected seed CDU
(>H:A320_Neo_EXPEDITE_MODE)^0#2009$0// Expedite mode
(>H:A320_Neo_FCU_HDG_PUSH)^0#2010$0// FCU heading push
(>H:A320_Neo_FCU_HDG_PULL)^0#2011$0// FCU heading pull
(A:AUTOPILOT HEADING SLOT INDEX, Number) 1 == if { (>K:A32NX.FCU_HDG_PUSH) } els { (>K:A32NX.FCU_HDG_PULL) }^0#2012$0//Heading push pull togle
(L:A32NX_TRK_FPA_MODE_ACTIVE, bool) if { (>H:A320_Neo_FCU_AP_INC_TRACK) } els { 1 (>K:HEADING_BUG_INC) (>H:A320_Neo_CDU_AP_INC_HEADING) }^0#2013$0// FCU heading inc
(L:A32NX_TRK_FPA_MODE_ACTIVE, bool) if { (>H:A320_Neo_FCU_AP_DEC_TRACK) } els { 1 (>K:HEADING_BUG_DEC) (>H:A320_Neo_CDU_AP_DEC_HEADING) }^0#2014$0// FCU heading dec
(L:XMLVAR_AirSpeedIsInMach) if { 1 (>K:AP_MACH_VAR_INC) } els { 1 (>K:AP_SPD_VAR_INC) } (>H:A320_Neo_CDU_AP_INC_SPEED)^0#2015$0// FCU speed inc
(L:XMLVAR_AirSpeedIsInMach) if { 1 (>K:AP_MACH_VAR_DEC) } els { 1 (>K:AP_SPD_VAR_DEC) } (>H:A320_Neo_CDU_AP_DEC_SPEED)^0#2016$0// FCU speed dec
(>H:A320_Neo_FCU_SPEED_PULL)^0#2017$0// FCU speed pull
(>H:A320_Neo_FCU_SPEED_PUSH)^0#2018$0// FCU speed push
(A:AUTOPILOT SPEED SLOT INDEX, Number) 1 == if { (>K:A32NX.FCU_SPD_PUSH) } els { (>K:A32NX.FCU_SPD_PULL) }^0#2019$0// Speed push pull toggle
(L:A32NX_TRK_FPA_MODE_ACTIVE, bool) 1 == if { (>H:A320_Neo_FCU_AP_INC_FPA) } els { 3 (>K:AP_VS_VAR_INC)  (>H:A320_Neo_FCU_VS_INC) }^0#2020$0// FCU vertical speed inc
(L:A32NX_TRK_FPA_MODE_ACTIVE, bool) 1 == if { (>H:A320_Neo_FCU_AP_DEC_FPA) } els { 3 (>K:AP_VS_VAR_DEC) (>H:A320_Neo_FCU_VS_DEC) }^0#2021$0// FCU vertical speed dec
(>H:A320_Neo_FCU_VS_PULL) (>H:A320_Neo_CDU_VS)^0#2022$0// FCU vs pull
(>H:A320_Neo_FCU_VS_PUSH) (>H:A320_Neo_CDU_VS)^0#2023$0// FCU vs push
(L:MF_VS_TOG,Bool) if { (>H:A320_Neo_FCU_VS_ZERO) } els { (>H:A320_Neo_FCU_VS_HOLD) } (L:MF_VS_TOG,Bool) ! (>L:MF_VS_TOG,Bool)^0#2024$0// FCU vs push pull toggle
(>H:A320_Neo_FCU_ALT_PULL) (>H:A320_Neo_CDU_MODE_SELECTED_ALTITUDE)^0#2025$0// Selected altitude pull
(>H:A320_Neo_FCU_ALT_PUSH) (>H:A320_Neo_CDU_MODE_MANAGED_ALTITUDE)^0#2026$0// Selected altitude push
(A:AUTOPILOT ALTITUDE SLOT INDEX, Number) 1 == if { (>K:A32NX.FCU_ALT_PUSH) } els { (>K:A32NX.FCU_ALT_PULL) }^0#2027$0// Altitude push toggle
3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) + (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) % - 49000 min (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up) (>H:A320_Neo_CDU_AP_INC_ALT)^0#2028$0//Alt inc
3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) - (L:XMLVAR_Autopilot_Altitude_Increment) (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) % - (L:XMLVAR_Autopilot_Altitude_Increment) % + 100 max (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Down) (>H:A320_Neo_CDU_AP_DEC_ALT)^0#2029$0//alt dec
3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 100 + (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 100 % - 49000 min (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up) (>H:A320_Neo_CDU_AP_INC_ALT)^0#2030$0// alt inc 100
3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 100 - 100 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 100 % - 100 % + 100 max (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Down) (>H:A320_Neo_CDU_AP_DEC_ALT)^0#2031$0// alt dec 100
3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 1000 + (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 1000 % - 49000 min (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up) (>H:A320_Neo_CDU_AP_INC_ALT)^0#2032$0// alt inc 1000
3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 1000 - 1000 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 1000 % - 1000 % + 1000 max (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Down) (>H:A320_Neo_CDU_AP_DEC_ALT)^0#2033$0// alt dec 1000
(>H:A320_Neo_FCU_SPEED_TOGGLE_SPEED_MACH)^0#2034$0// Toggle speed mach
0 (>L:A320_Neo_MFD_NAV_MODE_1)^0#2035$0// nav mode 0-5
1 (>L:A320_Neo_MFD_NAV_MODE_1)^0#2036$0// 
2 (>L:A320_Neo_MFD_NAV_MODE_1)^0#2037$0// 
3 (>L:A320_Neo_MFD_NAV_MODE_1)^0#2038$0// 
4 (>L:A320_Neo_MFD_NAV_MODE_1)^0#2039$0//
0 (>L:A320_Neo_MFD_Range_1)^0#2040$0// MFD range 010,20,40,80,160,320
1 (>L:A320_Neo_MFD_Range_1)^0#2041$0//
2 (>L:A320_Neo_MFD_Range_1)^0#2042$0// 
3 (>L:A320_Neo_MFD_Range_1)^0#2043$0// 
4 (>L:A320_Neo_MFD_Range_1)^0#2044$0// 
5 (>L:A320_Neo_MFD_Range_1)^0#2045$0//
0 (>L:BTN_WPT_1_FILTER_ACTIVE)^0#2046$0// Wpt btn off
1 (>L:BTN_WPT_1_FILTER_ACTIVE)^0#2047$0// Wpt btn on
0 (>L:BTN_CSTR_1_FILTER_ACTIVE)^0#2048$0// CSTR btn off
1 (>L:BTN_CSTR_1_FILTER_ACTIVE)^0#2049$0// CSTR btn on
0 (>L:BTN_VORD_1_FILTER_ACTIVE)^0#2050$0// VORD btn off
1 (>L:BTN_VORD_1_FILTER_ACTIVE)^0#2051$0// VORD btn on
0 (>L:BTN_NDB_1_FILTER_ACTIVE)^0#2052$0// CSTR btn off
1 (>L:BTN_NDB_1_FILTER_ACTIVE)^0#2053$0// CSTR btn on
0 (>L:BTN_ARPT_1_FILTER_ACTIVE)^0#2054$0// CSTR btn off
1 (>L:BTN_ARPT_1_FILTER_ACTIVE)^0#2055$0// CSTR btn on
0 (>L:BTN_LS_1_FILTER_ACTIVE)^0#2056$0// LS btn off
1 (>L:BTN_LS_1_FILTER_ACTIVE)^0#2057$0// LS btn on
(>K:A32NX.FCU_AP_1_PUSH)^0#2058$0// AP 1 pushed 
(>K:A32NX.FCU_AP_2_PUSH)^0#2059$0// AP 2 pushed 
(>K:A32NX.FCU_LOC_PUSH)^0#2060$0// Loc pushed
(>K:A32NX.FCU_APPR_PUSH)^0#2061$0// Appr pushed
(>K:A32NX.FCU_EXPED_PUSH)^0#2062$0// Exped pushed
(>K:A32NX.FMGC_DIR_TO_TRIGGER)^0#2063$0// dir to trigger pushed
(>K:A32NX.FCU_ATHR_PUSH)^0#2064$0// A/THR pushed
(L:A32NX_TRK_FPA_MODE_ACTIVE) ! (>L:A32NX_TRK_FPA_MODE_ACTIVE)^0#2065$0//FPA mode
(>H:AS3000_PFD_1_SOFTKEYS_1) (>H:AS1000_PFD_SOFTKEYS_1)^0#9000$0//
(L:XMLVAR_SWITCH_OVHD_INTLT_SEATBELT_Position) ! (>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE)^0#9001$0//
2 (>L:XMLVAR_BoostFuelPump, Number) (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) 2 != if { 2 (>K:ELECT_FUEL_PUMP1_SET) }^0#2500$0//
1 (>L:XMLVAR_BoostFuelPump, Number) (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) 1 != if { 1 (>K:ELECT_FUEL_PUMP1_SET) }^0#2501$0//
0 (>L:XMLVAR_BoostFuelPump, Number) (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) 0 != if { 0 (>K:ELECT_FUEL_PUMP1_SET) }^0#2502$0//
(>H:AS530_RightLargeKnob_Left) (>H:AS3000_PFD_BottomKnob_Large_DEC) (>H:AS1000_PFD_FMS_Lower_DEC)^0#5000$0//PFD Group  -
(>H:AS530_RightLargeKnob_Right) (>H:AS3000_PFD_BottomKnob_Large_INC) (>H:AS1000_PFD_FMS_Lower_INC)^0#5001$0//PFD Group  +
(>H:AS530_RightSmallKnob_Left) (>H:AS3000_TSC_Vertical_TopKnob_Large_DEC) (>H:AS1000_PFD_FMS_Upper_DEC)^0#5002$0//PFD Page -
(>H:AS530_RightSmallKnob_Right) (>H:AS3000_TSC_Vertical_TopKnob_Large_INC) (>H:AS1000_PFD_FMS_Upper_INC)^0#5003$0//PFD Page +
(>H:AS530_RightSmallKnob_Push) (>H:AS530_ENT_Push) (>H:AS3000_PFD_BottomKnob_Push) (>H:AS1000_PFD_ENT_Push)^0#5004$0//PFD Enter
(>H:AS530_MENU_Push) (>H:AS1000_PFD_MENU_Push)^0#5005$0//PFD Menu
(>H:AS530_PROC_Push) (>H:AS1000_PFD_PROC_Push)^0#5006$0//PFD Procedure
(>H:AS530_FPL_Push) (>H:AS1000_PFD_FPL_Push)^0#5007$0//PFD FPLN
(>H:AS530_RNG_Zoom) (>H:AS1000_PFD_RANGE_INC)^0#5008$0//PFD +
(>H:AS530_RNG_Dezoom) (>H:AS1000_PFD_RANGE_DEC)^0#5009$0//PFD -
(>H:AS530_DirectTo_Push) (>H:AS1000_PFD_DIRECTTO)^0#5010$0//PFD DIR
(>H:AS530_CLR_Push) (>H:AS1000_PFD_CLR)^0#5011$0//PFD CLR
(>H:AS3000_PFD_1_SOFTKEYS_1) (>H:AS1000_PFD_SOFTKEYS_1)^0#5012$0//PFD Softkey 1
(>H:AS3000_PFD_1_SOFTKEYS_2) (>H:AS1000_PFD_SOFTKEYS_2)^0#5013$0//PFD Softkey 2
(>H:AS3000_PFD_1_SOFTKEYS_3) (>H:AS1000_PFD_SOFTKEYS_3)^0#5014$0//PFD Softkey 3
(>H:AS3000_PFD_1_SOFTKEYS_4) (>H:AS1000_PFD_SOFTKEYS_4)^0#5015$0//PFD Softkey 4
(>H:AS3000_PFD_1_SOFTKEYS_5) (>H:AS1000_PFD_SOFTKEYS_5)^0#5016$0//PFD Softkey 5
(>H:AS3000_PFD_1_SOFTKEYS_6) (>H:AS1000_PFD_SOFTKEYS_6)^0#5017$0//PFD Softkey 6
(>H:AS3000_PFD_1_SOFTKEYS_7) (>H:AS1000_PFD_SOFTKEYS_7)^0#5018$0//PFD Softkey 7
(>H:AS3000_PFD_1_SOFTKEYS_8) (>H:AS1000_PFD_SOFTKEYS_8)^0#5019$0//PFD Softkey 8
(>H:AS3000_PFD_1_SOFTKEYS_9) (>H:AS1000_PFD_SOFTKEYS_9)^0#5020$0//PFD Softkey 9
(>H:AS3000_PFD_1_SOFTKEYS_10) (>H:AS1000_PFD_SOFTKEYS_10)^0#5021$0//PFD Softkey 10
(>H:AS3000_PFD_1_SOFTKEYS_11) (>H:AS1000_PFD_SOFTKEYS_11)^0#5022$0//PFD Softkey 11
(>H:AS3000_PFD_1_SOFTKEYS_12) (>H:AS1000_PFD_SOFTKEYS_12)^0#5023$0//PFD Softkey 12
(L:FuelQuantity)^3b#7001$0//Comments go here
(L:G1000_FuelUsedRef)^3b#7002$0//Comments go here
(L:ENG_FUEL_FLOW_GPH_1)^3f#7003$0//Comments go here
(L:ENG_FUEL_FLOW_GPH_2)^3i#7004$0//Comments go here
AS3000_PFD_1_SOFTKEYS_12) (>H:AS1000_PFD_SOFTKEYS_12)^0#5023$0//PFD Softkey 12